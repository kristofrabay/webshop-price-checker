mf$sale_rel <- NULL
mf %>% rename(paste0('price_current_', Sys.Date()) = product_prices,
paste0('price_old_', Sys.Date()) = product_prices_old)
paste0('price_current_', Sys.Date())
rename_price_new <- paste0('price_current_', Sys.Date())
rename_price_old <- paste0('price_old_', Sys.Date())
mf %>% rename(rename_price_new = product_prices,
rename_price_old = product_prices_old)
mf %>% rename(get(rename_price_new) = product_prices,
rename_price_old = product_prices_old)
rename_price_new
rename_price_old
mf %>% rename(price_current_2020-07-16 = product_prices,
price_old_2020-07-16 = product_prices_old)
mf %>% rename("price_current_2020-07-16" = product_prices,
"price_old_2020-07-16" = product_prices_old)
mf <- mf %>% rename("price_current_2020-07-16" = product_prices,
"price_old_2020-07-16" = product_prices_old)
View(mf)
saveRDS(mf, "data/masterfile.RDS")
mf <- readRDS("data/masterfile.RDS")
data <- readRDS(paste0("data/data_products_", Sys.Date(), ".RDS"))
to_drop <- c("product_secondary_categories", "sale_abs", "sale_flag", "sale_rel")
data[to_drop]
data[to_drop,]
data[,to_drop]
data(to_drop)
data.table(data)
data.table(data)[to_drop]
data.table(data)[,to_drop]
data.table(data)[,..to_drop]
data[..to_drop]
data[,..to_drop]
data[,..to_drop] <- NULL
data[,..to_drop := NULL]
data.table(data)[,..to_drop := NULL]
data.table(data)[,..to_drop]
data <- data.table(data)
data[, to_drop]
data[, ..to_drop]
data[, ..to_drop := NULL]
data[, to_drop := NULL]
library(data.table)
data[, to_drop := NULL]
data[, .to_drop := NULL]
data[, .(to_drop) := NULL]
data[, .(to_drop := NULL)]
data[, to_drop := NULL]
data[, (to_drop) := NULL]
data
names(data)
names(data)[4]
names(data)[5]
names(data)[5] <- paste0('price_current_', Sys.Date())
names(data)[6]
names(data)[6] <- paste0('price_old_', Sys.Date())
data
Sys.Date(1)
paste0('price_current_', Sys.Date() + 1)
names(data)[5] <- paste0('price_current_', Sys.Date() + 1)
names(data)[6] <- paste0('price_old_', Sys.Date() + 1)
merge(mf, data, by = c("product_codes"))
merge(mf, data, by = c("product_codes"), all.x = T)
merge(mf, data, by = c("product_codes", "product_names"), all.x = T)
merge(mf, data, by = c("product_codes", "product_names", "product_main_categories"), all.x = T)
mf
merge(mf, data, by = c("product_codes", "product_names", "product_main_categories"), all.x = T)
merge(mf, data, by = c("product_codes", "product_names", "product_main_categories", "product_sub_categories"), all.x = T)
mf <- merge(mf, data, by = c("product_codes", "product_names", "product_main_categories", "product_sub_categories"), all.x = T)
saveRDS("data/masterfile.RDS")
saveRDS(mf, "data/masterfile.RDS")
mf <- readRDS("data/masterfile.RDS")
mf
mf$product_sub_categories
str_replace(mf$product_sub_categories, " \\(.*\\)", "")
trimws(str_replace(mf$product_sub_categories, " \\(.*\\)", ""))
mf$product_sub_categories <- trimws(str_replace(mf$product_sub_categories, " \\(.*\\)", ""))
mf <- readRDS("data/masterfile.RDS")
data <- readRDS(paste0("data/data_products_", Sys.Date(), ".RDS"))
to_drop <- c("product_secondary_categories", "sale_abs", "sale_flag", "sale_rel")
data <- data.table(data)
data[, (to_drop) := NULL]
names(data)[5] <- paste0('price_current_', Sys.Date())
names(data)[6] <- paste0('price_old_', Sys.Date())
merge(mf, data, by = c("product_codes", "product_names", "product_main_categories", "product_sub_categories"), all.x = T)
mf
mf$product_sub_categories <- trimws(str_replace(mf$product_sub_categories, " \\(.*\\)", ""))
mf
merge(mf, data, by = c("product_codes", "product_names", "product_main_categories", "product_sub_categories"), all.x = T)
data
data$product_sub_categories <- trimws(str_replace(data$product_sub_categories, " \\(.*\\)", ""))
data
merge(mf, data, by = c("product_codes", "product_names", "product_main_categories", "product_sub_categories"), all.x = T)
mf <- readRDS("data/masterfile.RDS")
mf
mf$product_sub_categories <- trimws(str_replace(mf$product_sub_categories, " \\(.*\\)", ""))
saveRDS(mf, "data/masterfile.RDS")
mf <- readRDS("data/masterfile.RDS")
mf
mf$`price_old_2020-07-17` <- NULL
mf$`price_current_2020-07-17` <- NULL
saveRDS(mf, "data/masterfile.RDS")
mf <- readRDS("data/masterfile.RDS")
mf
data <- readRDS(paste0("data/data_products_", Sys.Date(), ".RDS"))
to_drop <- c("product_secondary_categories", "sale_abs", "sale_flag", "sale_rel")
data <- data.table(data)
data[, (to_drop) := NULL]
names(data)[5] <- paste0('price_current_', Sys.Date())
names(data)[6] <- paste0('price_old_', Sys.Date())
merge(mf, data, by = c("product_codes", "product_names", "product_main_categories", "product_sub_categories"), all.x = T)
data
data <- readRDS(paste0("data/data_products_", Sys.Date(), ".RDS"))
data$product_sub_categories <- trimws(str_replace(data$product_sub_categories, " \\(.*\\)", ""))
data
saveRDS(data, paste0("data/data_products_", Sys.Date(), ".RDS"))
mf <- readRDS("data/masterfile.RDS")
data <- readRDS(paste0("data/data_products_", Sys.Date(), ".RDS"))
to_drop <- c("product_secondary_categories", "sale_abs", "sale_flag", "sale_rel")
data <- data.table(data)
data[, (to_drop) := NULL]
names(data)[5] <- paste0('price_current_', Sys.Date())
names(data)[6] <- paste0('price_old_', Sys.Date())
merge(mf, data, by = c("product_codes", "product_names", "product_main_categories", "product_sub_categories"), all.x = T)
mf <- readRDS("data/masterfile.RDS")
View(mf)
library(tidyverse)
library(rvest)
library(data.table)
library(pbapply)
library(httr)
main_link <- "https://www.mediamarkt.hu/?ref=logo_rh"
main_categories_link <- read_html(main_link) %>%
html_nodes(".ms-row__column:nth-child(3) .ms-link") %>%
html_attr("href") %>%
str_replace_all("//", "https://")
main_categories_link
links <- readRDS("data/links_categories.RDS")
links
links <- readRDS("data/links_products.RDS")
links
extract_product_data <- function(link) {
if (as.integer(runif(1, 0, 100)) < 10) {
page <- read_html(GET(link, add_headers('user-agent' = 'mozilla')))
} else if (as.integer(runif(1, 0, 100)) < 20) {
page <- read_html(GET(link, add_headers('user-agent' = 'chrome')))
} else if (as.integer(runif(1, 0, 100)) < 30) {
page <- read_html(GET(link, add_headers('user-agent' = 'edge')))
} else if (as.integer(runif(1, 0, 100)) < 40) {
page <- read_html(GET(link, add_headers('user-agent' = 'safari')))
} else if (as.integer(runif(1, 0, 100)) < 50) {
page <- read_html(GET(link, add_headers('user-agent' = 'express')))
} else if (as.integer(runif(1, 0, 100)) < 60) {
page <- read_html(GET(link, add_headers('user-agent' = 'opera')))
} else if (as.integer(runif(1, 0, 100)) < 70) {
page <- read_html(GET(link, add_headers('user-agent' = 'microsoft')))
} else if (as.integer(runif(1, 0, 100)) < 80) {
page <- read_html(GET(link, add_headers('user-agent' = 'apple')))
} else if (as.integer(runif(1, 0, 100)) < 90) {
page <- read_html(GET(link, add_headers('user-agent' = 'google')))
} else {
page <- read_html(GET(link, add_headers('user-agent' = 'facebook')))
}
product_names <- page %>% html_nodes("h2 a") %>% html_text(trim = T)
if (!identical(product_names, character(0))) {
product_main_categories <- page %>% html_nodes(".home+ li a") %>% html_text()
product_secondary_categories <- page %>% html_nodes(".home~ li+ li a") %>% html_text()
product_secondary_categories <- ifelse(identical(product_secondary_categories, character(0)), NA, product_secondary_categories)
product_sub_categories <- page %>% html_nodes("h1") %>% html_text()
product_codes <- page %>% html_nodes(".printonly") %>% html_text(trim = T) %>% str_remove_all("Cikkszám: ")
product_prices <- page %>% html_nodes(".small") %>% html_text() %>% as.numeric()
product_prices_old <- page %>% html_nodes('.infobox') %>% html_node(".price-old") %>% html_text() %>% str_replace_all("[\r\n\t]", "") %>% as.numeric()
product_prices_old <- product_prices_old[c(T, F)]
if (length(product_names) == length(product_prices)) {
data <- data.frame(product_names = product_names,
product_main_categories = product_main_categories,
product_secondary_categories = product_secondary_categories,
product_sub_categories = product_sub_categories,
product_codes = product_codes,
product_prices = product_prices,
product_prices_old = product_prices_old,
sale_flag = ifelse(((product_prices_old != "NA") & (product_prices_old != product_prices)),1,0))
}
}
}
data <- rbindlist(pblapply(links[1:10][[1]], extract_product_data))
View(data)
links[1:10]
library(scales)
data <- readRDS(paste0("data/data_products_", Sys.Date() - 1, ".RDS"))
data %>% group_by(sale_flag) %>% summarize(count = n()) %>% mutate(sale_flag = ifelse(is.na(sale_flag), 0, 1), count_pct = count / sum(count)) %>%
ggplot(aes(sale_flag, count)) +
geom_col() +
geom_text(aes(label = scales::percent(count_pct)), position = position_dodge(width = 1), vjust = -0.5) +
scale_x_continuous(breaks = c(0, 1)) +
scale_y_continuous() +
labs(title = paste0('Akciós termékek aránya ', Sys.Date()),
x = 'Akciós', y = 'Db') +
theme_bw()
data %>% group_by(product_main_categories, sale_flag) %>% summarize(count = n()) %>% mutate(sale_flag = ifelse(is.na(sale_flag), 0, 1), count_pct = count / sum(count)) %>%
ggplot(aes(sale_flag, count_pct)) +
geom_col() +
geom_text(aes(label = scales::percent(round(count_pct, digits = 3))), position = position_dodge(width = 1.5), vjust = -1/3) +
scale_x_continuous(breaks = c(0, 1)) +
scale_y_continuous(labels = percent_format(accuracy = 5L), breaks = seq(0, 1, 0.1), limits = c(0, 1)) +
facet_wrap(~product_main_categories) +
labs(title = paste0('Akciós termékek aránya ', Sys.Date()),
x = NULL, y = NULL) +
theme_bw()
View(data)
data %>% ggplot(aes(product_main_categories, abs(sale_rel), color = product_main_categories, fill = product_main_categories)) +
geom_boxplot(alpha = 0.5, show.legend = F, width = 1/2) +
labs(x = NULL, y = NULL, title = paste0('Akciók eloszlása ', Sys.Date())) +
scale_y_continuous(labels = percent_format(accuracy = 5L), breaks = seq(0, 1, 0.1), limits = c(0, 1)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
data %>% ggplot(aes(product_prices)) +
geom_histogram(show.legend = F) +
labs(x = NULL, y = NULL, title = paste0('Árak eloszlása ', Sys.Date())) +
scale_y_continuous(label = comma) +
scale_x_continuous(label = comma, limits = c(0, 250000)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
facet_wrap(~product_main_categories, scales = 'free')
data %>% ggplot(aes(product_prices)) +
geom_histogram(show.legend = F) +
labs(x = NULL, y = NULL, title = paste0('Árak eloszlása ', Sys.Date())) +
scale_y_continuous(label = comma) +
scale_x_continuous(label = comma) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
facet_wrap(~product_main_categories, scales = 'free')
data %>% ggplot(aes(product_prices)) +
geom_histogram(show.legend = F) +
labs(x = NULL, y = NULL, title = paste0('Árak eloszlása ', Sys.Date())) +
scale_y_continuous(label = comma) +
scale_x_continuous(label = comma, limits = c(0, 250000)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
facet_wrap(~product_main_categories, scales = 'free')
links
links
links <- readRDS("data/links_categories.RDS")
products_links <- rbindlist(pblapply(links[[1]], function(link) {
last_page <- read_html(link[[1]]) %>% html_node(".hellip+ li a") %>% html_text() %>% as.numeric()
if (is.na(last_page)) {
all_links_to_scrape <- paste0(link[[1]], "?searchParams=&sort=&view=PRODUCTLIST&page=", 1:4)
} else {
all_links_to_scrape <- paste0(link[[1]], "?searchParams=&sort=&view=PRODUCTLIST&page=", 1:last_page)
}
return(list(all_links_to_scrape))
}))
products_links
saveRDS(products_links, "data/links_products.RDS")
links <- readRDS("data/links_products.RDS")
links
extract_product_data <- function(link) {
if (as.integer(runif(1, 0, 100)) < 10) {
page <- read_html(GET(link, add_headers('user-agent' = 'mozilla')))
} else if (as.integer(runif(1, 0, 100)) < 20) {
page <- read_html(GET(link, add_headers('user-agent' = 'chrome')))
} else if (as.integer(runif(1, 0, 100)) < 30) {
page <- read_html(GET(link, add_headers('user-agent' = 'edge')))
} else if (as.integer(runif(1, 0, 100)) < 40) {
page <- read_html(GET(link, add_headers('user-agent' = 'safari')))
} else if (as.integer(runif(1, 0, 100)) < 50) {
page <- read_html(GET(link, add_headers('user-agent' = 'express')))
} else if (as.integer(runif(1, 0, 100)) < 60) {
page <- read_html(GET(link, add_headers('user-agent' = 'opera')))
} else if (as.integer(runif(1, 0, 100)) < 70) {
page <- read_html(GET(link, add_headers('user-agent' = 'microsoft')))
} else if (as.integer(runif(1, 0, 100)) < 80) {
page <- read_html(GET(link, add_headers('user-agent' = 'apple')))
} else if (as.integer(runif(1, 0, 100)) < 90) {
page <- read_html(GET(link, add_headers('user-agent' = 'google')))
} else {
page <- read_html(GET(link, add_headers('user-agent' = 'facebook')))
}
product_names <- page %>% html_nodes("h2 a") %>% html_text(trim = T)
if (!identical(product_names, character(0))) {
product_main_categories <- page %>% html_nodes(".home+ li a") %>% html_text()
product_secondary_categories <- page %>% html_nodes(".home~ li+ li a") %>% html_text()
product_secondary_categories <- ifelse(identical(product_secondary_categories, character(0)), NA, product_secondary_categories)
product_sub_categories <- page %>% html_nodes("h1") %>% html_text()
product_codes <- page %>% html_nodes(".printonly") %>% html_text(trim = T) %>% str_remove_all("Cikkszám: ")
product_prices <- page %>% html_nodes(".small") %>% html_text() %>% as.numeric()
product_prices_old <- page %>% html_nodes('.infobox') %>% html_node(".price-old") %>% html_text() %>% str_replace_all("[\r\n\t]", "") %>% as.numeric()
product_prices_old <- product_prices_old[c(T, F)]
if (length(product_names) == length(product_prices)) {
data <- data.frame(product_names = product_names,
product_main_categories = product_main_categories,
product_secondary_categories = product_secondary_categories,
product_sub_categories = product_sub_categories,
product_codes = product_codes,
product_prices = product_prices,
product_prices_old = product_prices_old,
sale_flag = ifelse(((product_prices_old != "NA") & (product_prices_old != product_prices)),1,0))
}
}
}
data <- rbindlist(pblapply(links[[1]], extract_product_data))
data <- distinct(data, product_codes, .keep_all = TRUE)
data$sale_abs <- data$product_prices - data$product_prices_old
data$sale_rel <- (data$product_prices - data$product_prices_old) / data$product_prices_old
data$product_sub_categories <- trimws(str_replace(data$product_sub_categories, " \\(.*\\)", ""))
saveRDS(data, paste0("data/data_products_", Sys.Date(), ".RDS"))
View(data)
data <- readRDS(paste0("data/data_products_", Sys.Date(), ".RDS"))
dir.create(paste0("charts/", Sys.Date()))
table(data$product_main_categories)
table(data$product_secondary_categories)
table(data$product_sub_categories)
data %>% group_by(sale_flag) %>% summarize(count = n()) %>% mutate(sale_flag = ifelse(is.na(sale_flag), 0, 1), count_pct = count / sum(count)) %>%
ggplot(aes(sale_flag, count)) +
geom_col() +
geom_text(aes(label = scales::percent(count_pct)), position = position_dodge(width = 1), vjust = -0.5) +
scale_x_continuous(breaks = c(0, 1)) +
scale_y_continuous() +
labs(title = paste0('Akciós termékek aránya ', Sys.Date()),
x = 'Akciós', y = 'Db') +
theme_bw()
ggsave(paste0("charts/", Sys.Date(), "/on_sale.png"))
data %>% group_by(product_main_categories, sale_flag) %>% summarize(count = n()) %>% mutate(sale_flag = ifelse(is.na(sale_flag), 0, 1), count_pct = count / sum(count)) %>%
ggplot(aes(sale_flag, count_pct)) +
geom_col() +
geom_text(aes(label = scales::percent(round(count_pct, digits = 3))), position = position_dodge(width = 1.5), vjust = -1/3) +
scale_x_continuous(breaks = c(0, 1)) +
scale_y_continuous(labels = percent_format(accuracy = 5L), breaks = seq(0, 1, 0.1), limits = c(0, 1)) +
facet_wrap(~product_main_categories) +
labs(title = paste0('Akciós termékek aránya ', Sys.Date()),
x = NULL, y = NULL) +
theme_bw()
ggsave(paste0("charts/", Sys.Date(), "/on_sale_by_cat.png"))
data %>% ggplot(aes(product_main_categories, abs(sale_rel), color = product_main_categories, fill = product_main_categories)) +
geom_boxplot(alpha = 0.5, show.legend = F, width = 1/2) +
labs(x = NULL, y = NULL, title = paste0('Akciók eloszlása ', Sys.Date())) +
scale_y_continuous(labels = percent_format(accuracy = 5L), breaks = seq(0, 1, 0.1), limits = c(0, 1)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggsave(paste0("charts/", Sys.Date(), "/on_sale_by_cat_distribution.png"))
data %>% ggplot(aes(product_prices)) +
geom_histogram(show.legend = F) +
labs(x = NULL, y = NULL, title = paste0('Árak eloszlása ', Sys.Date())) +
scale_y_continuous(label = comma) +
scale_x_continuous(label = comma, limits = c(0, 250000)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
facet_wrap(~product_main_categories, scales = 'free')
ggsave(paste0("charts/", Sys.Date(), "/prices_by_cat_distribution.png"))
data %>% ggplot(aes(product_main_categories, abs(sale_rel), color = product_main_categories, fill = product_main_categories)) +
geom_boxplot(alpha = 0.5, show.legend = F, width = 1/2) +
labs(x = NULL, y = NULL, title = paste0('Akciók eloszlása ', Sys.Date())) +
scale_y_continuous(labels = percent_format(accuracy = 5L), breaks = seq(0, 1, 0.1), limits = c(0, 1)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
data %>% group_by(product_main_categories, sale_flag) %>% summarize(count = n()) %>% mutate(sale_flag = ifelse(is.na(sale_flag), 0, 1), count_pct = count / sum(count)) %>%
ggplot(aes(sale_flag, count_pct)) +
geom_col() +
geom_text(aes(label = scales::percent(round(count_pct, digits = 3))), position = position_dodge(width = 1.5), vjust = -1/3) +
scale_x_continuous(breaks = c(0, 1)) +
scale_y_continuous(labels = percent_format(accuracy = 5L), breaks = seq(0, 1, 0.1), limits = c(0, 1)) +
facet_wrap(~product_main_categories) +
labs(title = paste0('Akciós termékek aránya ', Sys.Date()),
x = NULL, y = NULL) +
theme_bw()
data %>% group_by(product_main_categories, sale_flag) %>% summarize(count = n()) %>% mutate(sale_flag = ifelse(is.na(sale_flag), 0, 1), count_pct = count / sum(count)) %>%
ggplot(aes(sale_flag, count_pct)) +
geom_col() +
geom_text(aes(label = scales::percent(round(count_pct, digits = 3))), position = position_dodge(width = 1.5), vjust = -1/3) +
scale_x_continuous(breaks = c(0, 1)) +
scale_y_continuous(labels = percent_format(accuracy = 5L), breaks = seq(0, 1, 0.1), limits = c(0, 1)) +
facet_wrap(~product_main_categories) +
labs(title = paste0('Akciós termékek aránya ', Sys.Date()),
x = NULL, y = NULL) +
theme_bw()
data %>% group_by(product_main_categories, sale_flag) %>% summarize(count = n()) %>% mutate(sale_flag = ifelse(is.na(sale_flag), 0, 1), count_pct = count / sum(count)) %>%
ggplot(aes(sale_flag, count_pct)) +
geom_col() +
geom_text(aes(label = scales::percent(round(count_pct, digits = 2))), position = position_dodge(width = 1.5), vjust = -1/3) +
scale_x_continuous(breaks = c(0, 1)) +
scale_y_continuous(labels = percent_format(accuracy = 5L), breaks = seq(0, 1, 0.1), limits = c(0, 1)) +
facet_wrap(~product_main_categories) +
labs(title = paste0('Akciós termékek aránya ', Sys.Date()),
x = NULL, y = NULL) +
theme_bw()
data %>% group_by(product_main_categories, sale_flag) %>% summarize(count = n()) %>% mutate(sale_flag = ifelse(is.na(sale_flag), 0, 1), count_pct = count / sum(count)) %>%
ggplot(aes(sale_flag, count_pct)) +
geom_col() +
geom_text(aes(label = scales::percent(round(count_pct, digits = 4))), position = position_dodge(width = 1.5), vjust = -1/3) +
scale_x_continuous(breaks = c(0, 1)) +
scale_y_continuous(labels = percent_format(accuracy = 5L), breaks = seq(0, 1, 0.1), limits = c(0, 1)) +
facet_wrap(~product_main_categories) +
labs(title = paste0('Akciós termékek aránya ', Sys.Date()),
x = NULL, y = NULL) +
theme_bw()
ggsave(paste0("charts/", Sys.Date(), "/on_sale_by_cat.png"))
library(tidyverse)
library(data.table)
mf <- readRDS("data/masterfile.RDS")
data <- readRDS(paste0("data/data_products_", Sys.Date(), ".RDS"))
to_drop <- c("product_secondary_categories", "sale_abs", "sale_flag", "sale_rel")
data <- data.table(data)
data[, (to_drop) := NULL]
names(data)[5] <- paste0('price_current_', Sys.Date())
names(data)[6] <- paste0('price_old_', Sys.Date())
View(data)
merge(mf, data, by = c("product_codes", "product_names", "product_main_categories", "product_sub_categories"), all.x = T)
merge(mf, data, by = c("product_codes", "product_names", "product_main_categories", "product_sub_categories"), all.x = T) %>%
View()
merge(mf, data, by = c("product_codes", "product_names", "product_main_categories", "product_sub_categories")) %>%
View()
merge(mf,
data,
by = c("product_codes", "product_names", "product_main_categories", "product_sub_categories"),
all = T) %>%
View()
mf <- merge(mf, data,
by = c("product_codes", "product_names", "product_main_categories", "product_sub_categories"),
all = T)
saveRDS(mf, "data/masterfile.RDS")
paste0('price_current_', Sys.Date())
current_price_col <- paste0('price_current_', Sys.Date())
previous_price_col <- paste0('price_current_', Sys.Date() - 1)
previous_price_col
mf %>%
filter(is.na(get(current_price_col)))
mf %>%
filter(is.na(current_price_col))
mf %>%
filter(is.na(get(current_price_col)))
mf %>%
filter(is.na(get(current_price_col)) & !is.na(get(previous_price_col)))
mf %>%
filter(is.na(get(current_price_col)) & !is.na(get(previous_price_col))) %>%
nrow()
# products new compared to prev date
mf %>%
filter(!is.na(get(current_price_col)) & !is.na(get(previous_price_col)))
# products new compared to prev date
mf %>%
filter(!is.na(get(current_price_col)) & is.na(get(previous_price_col)))
882-699
nrow(readRDS("data/data_products_2020-07-17.RDS")) - nrows(readRDS("data/data_products_2020-07-16.RDS"))
nrow(readRDS("data/data_products_2020-07-17.RDS")) - nrow(readRDS("data/data_products_2020-07-16.RDS"))
# products not available any more
sold_out <- mf %>%
filter(is.na(get(current_price_col)) & !is.na(get(previous_price_col)))
# new products
new <- mf %>%
filter(!is.na(get(current_price_col)) & is.na(get(previous_price_col)))
new-sold_out
nrow(new) - nrow(sold_out)
net_change <- nrow(new) - nrow(sold_out)
if (net_change >= 0) {
print(paste0(net_change, " more products on website from last time"))
} else {
print(paste0(net_change, " less products on website from last time"))
}
net_change <- -1230
if (net_change >= 0) {
print(paste0(net_change, " more products on website from last time"))
} else {
print(paste0(net_change, " less products on website from last time"))
}
if (net_change >= 0) {
print(paste0(net_change, " more products on website from last time"))
} else {
print(paste0(abs(net_change), " less products on website from last time"))
}
net_change <- nrow(new) - nrow(sold_out)
if (net_change >= 0) {
print(paste0(net_change, " more products on website from last time"))
} else {
print(paste0(abs(net_change), " less products on website from last time"))
}
sold_out
sold_out %>% group_by(product_main_categories) %>% summarize(count = n()) %>% ungroup()
sold_out %>% group_by(product_main_categories) %>% summarize(count = n()) %>% ungroup() %>% arrange(desc(count))
warnings()
sold_out %>% group_by(product_main_categories) %>% summarize(count = n()) %>% ungroup() %>% arrange(desc(count))
new %>% group_by(product_main_categories) %>% summarize(count = n()) %>% ungroup() %>% arrange(desc(count))
sold_out %>% group_by(product_main_categories) %>%
summarize(count = n()) %>% ungroup() %>% arrange(desc(count)) %>%
mutate(total = sum(count),
rel = count / total)
new %>% group_by(product_main_categories) %>%
summarize(count = n()) %>% ungroup() %>% arrange(desc(count)) %>%
mutate(total = sum(count),
rel = count / total)
mf
mf %>%
filter(is.na(get(current_price_col)) & is.na(get(previous_price_col)))
mf %>%
filter(!is.na(get(current_price_col)) & 4is.na(get(previous_price_col)))
mf %>%
filter(!is.na(get(current_price_col)) & is.na(get(previous_price_col)))
mf %>%
filter(!is.na(get(current_price_col)) & !is.na(get(previous_price_col)))
new
mf %>%
filter(!is.na(get(current_price_col)) & !is.na(get(previous_price_col)))
mf %>%
filter(!is.na(get(current_price_col)) & !is.na(get(previous_price_col))) %>%
filter(get(current_price_col) != get(previous_price_col))
mf %>%
filter(!is.na(get(current_price_col)) & !is.na(get(previous_price_col))) %>%
filter(get(current_price_col) != get(previous_price_col)) %>%
View()
price_change <- mf %>%
filter(!is.na(get(current_price_col)) & !is.na(get(previous_price_col))) %>%
filter(get(current_price_col) != get(previous_price_col))
View(price_change)
